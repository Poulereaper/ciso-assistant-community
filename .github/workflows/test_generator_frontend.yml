name: Test Generator Frontend

# Trigger on every push or PR to main/develop/feat branches
on:
  push:
    branches: [main, develop, feat/test-generator-AI, feat/backend-frontend-test-genai-workflow, test/workflow-tester]
    paths:
      - 'frontend/**'
      - 'tools/test_generator/frontend/**'
      - '!**/*.md'
      - '!**/*.txt'
      - '!**/*.png'
      - '!**/pnpm-lock.yaml'
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize]
    paths:
      - 'frontend/**'
      - 'tools/test_generator/frontend/**'
      - '!**/*.md'
      - '!**/*.txt'
      - '!**/*.png'
      - '!**/pnpm-lock.yaml'
  workflow_dispatch:  # Allows manual triggering

jobs:
  test-generator-frontend:
    name: Generate Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full Git history
      
      - name: Get Git diff
        id: get_diff
        run: |
          echo "Fetching main branch..."
          git fetch origin main
          
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "Getting PR diff for frontend files..."
            git diff origin/main...HEAD -- frontend/ > frontend_diff.patch
            git diff origin/main...HEAD --name-only -- frontend/ > frontend_diff_files.txt
          else
            echo "Getting push diff for frontend files..."
            git diff HEAD^..HEAD -- frontend/ > frontend_diff.patch
            git diff HEAD^..HEAD --name-only -- frontend/ > frontend_diff_files.txt
          fi
          
          echo "Diff files count: $(wc -l < frontend_diff_files.txt)"
          echo "Frontend Diff Content:"
          cat frontend_diff.patch

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Filter relevant files
        id: filter_files
        run: |
          echo "Filtering frontend files for test generation..."
          
          # Remove the 'frontend/' prefix and filter relevant files
          sed 's|^frontend/||' frontend_diff_files.txt \
            | grep -E '\.(ts|js|svelte)$' \
            | grep -Ev '/tests?/' \
            | grep -Ev '\.test\.(ts|js|svelte)$' \
            | grep -Ev '\.spec\.(ts|js|svelte)$' \
            > frontend_relevant_files.txt || true
      
          echo "Relevant files count: $(wc -l < frontend_relevant_files.txt || echo 0)"
      
          if [ -s frontend_relevant_files.txt ]; then
            echo "Files to consider for test generation:"
            cat frontend_relevant_files.txt
          else
            echo "No relevant frontend files found for test generation."
          fi 

      - name: Find related files
        id: find_related_files
        run: |
          cp tools/test_generator/frontend/scripts/find_related_files.py ./find_related_files.py
          
          chmod +x find_related_files.py

          echo "Workspace: $GITHUB_WORKSPACE"
          
          python find_related_files.py frontend_relevant_files.txt $GITHUB_WORKSPACE/frontend
          
          if [ -s all_files.txt ]; then
            echo "===== Original files with their dependencies ====="
            cat dependencies_map.json | jq
            
            echo "===== List of all files to be analyzed ====="
            cat all_files.txt
            
            cp all_files.txt frontend_final_files.txt
          else
            echo "No related files found."
            cp frontend_relevant_files.txt frontend_final_files.txt
          fi

      - name: Find related test files
        id: find_related_test_files
        run: |
          cp tools/test_generator/frontend/scripts/find_related_test_files.py ./find_related_test_files.py
          
          chmod +x find_related_test_files.py
          
          python find_related_test_files.py frontend_relevant_files.txt $GITHUB_WORKSPACE/frontend
          
          if [ -s all_test_files.txt ]; then
            echo "===== List of all test files to be analyzed ====="
            cat all_test_files.txt
            
            cp all_test_files.txt frontend_related_test_files.txt
          else
            echo "No related test files found."
            cp frontend_relevant_files.txt frontend_related_test_files.txt
          fi